stage("Show Branch Data") {
    steps {
        script {
            def selectedBranch = params.SELECTBRANCH
            
            // Get the list of branches dynamically from Git
            def branchList = sh(script: 'git branch --format="%(refname:short)"', returnStdout: true).trim().split('\n')
            def files = [:]
            
            // Generate file mapping dynamically based on the branches available
            branchList.each { branch ->
                files[branch] = "${branch}.txt"
            }
            
            def fileName = files[selectedBranch]
            if (fileName) {
                // Checkout the selected branch
                sh "git checkout ${selectedBranch}"
                
                // Read and print the content of the file associated with the selected branch
                def fileContent = readFile(file: fileName)
                echo "Content of ${fileName}: ${fileContent}"
                
                // Optionally, you can also use 'cat' command
                // sh "cat ${fileName}"
            } else {
                echo "File not found for this branch: ${selectedBranch}"
            }
        }
    }
}
